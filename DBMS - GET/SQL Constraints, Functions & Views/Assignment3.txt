1. Shopper's Information with Orders in Last 30 Days


SELECT 
     u.user_id, 
     u.username, 
     u.email, 
     COUNT(o.order_id) AS orderCount 
FROM 
     users u
LEFT JOIN 
     orders o on u.user_id = o.user_id  
     AND o.order_date >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY)
Where 
     user_role = 'Shopper'
GROUP BY  
     u.user_id, u.username, u.email
ORDER BY 
     orders_in_last_30_days DESC;


2. Top 10 Shoppers by Revenue in Last 30 Days


select 
     u.user_id, 
     u.username, 
     u.email, 
     SUM(o.total_amount) AS TotalExpense
from 
     users u
LEFT JOIN 
     orders o on u.user_id = o.user_id  
     AND o.order_date >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY)
Where 
     user_role = 'Shopper'
GROUP BY  
     u.user_id, u.username, u.email
ORDER BY 
     TotalExpense DESC
LIMIT 10;


3. Top 20 Most Ordered Products in Last 60 Days


Select p.product_id, p.product_name, COUNT(oi.quantity) AS ProductQuantity
FROM products p
JOIN order_items oi on oi.product_id = p.product_id
JOIN orders o on o.order_id = oi.order_id
where o.order_date >= DATE_SUB(CURRENT_DATE, INTERVAL 60 DAY)
Group by p.product_id, p.product_name
ORDER BY ProductQuantity DESC
LIMIT 20; 


4. Monthly Sales Revenue for Last 6 Months



SELECT
    DATE_FORMAT(order_date, '%Y-%m') AS sales_month,
    ROUND(SUM(total_amount), 2) AS monthly_revenue
FROM
    Orders
WHERE
    order_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH)
GROUP BY
    sales_month
ORDER BY
    sales_month;

5. Mark Products as Inactive (Not Ordered in Last 90 Days)

First, add an 'ProductStatus' column to Products table if not exists

Alter table products
Add ProductStatus Enum('Active','Inactive') Default 'Active'; 


Update products as inactive

UPDATE Products p
SET p.ProductStatus = 'Inactive'
WHERE p.product_id NOT IN (
    SELECT DISTINCT oi.product_id
    FROM Order_Items oi
    JOIN Orders o ON oi.order_id = o.order_id
    WHERE o.order_date >= DATE_SUB(CURRENT_DATE, INTERVAL 90 DAY)
);



6. Search Products by Category Keyword


Select p.product_id, p.product_name, p.stock_quantity, c.category_name
From products p
Join product_categories pc on p.product_id = pc.product_id
Join categories c on c.category_id = pc.category_id
Where c.category_name = 'Mobile';
    

c.category_name LIKE '%{search_keyword}%'



7. Top 10 Most Cancelled Items


Select p.product_id, p.product_name 
from products p
Join order_items oi on oi.product_id = p.product_id
Join orders o on oi.order_id = o.order_id
Where o.order_status = 'Canceled'
Group by p.product_id, p.product_name
Order by COUNT(oi.product_id) DESC
LIMIT 10;
